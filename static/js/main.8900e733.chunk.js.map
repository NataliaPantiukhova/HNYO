{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["puzzles","Grid","puzzle","this","$grid","$","$clues","$id","$author","gridPadding","cellMargin","cleanUp","setup","SelectionHandler","grid","setupEvents","_debugEvents","loadGame","gameButton","console","log","each","removeClass","remove","prototype","empty","text","id","columns","Array","width","cellClasses","cellSize","rows","letters","split","iY","length","cols","y","height","x","letter","cell","class","cellInner","appendTo","xPos","yPos","css","data","undefined","unshift","$el","clues","clueI","clue","$clue","push","author","deleteWord","word","coords","revealedAnswer","colsDroppingAt","fill","coordsLength","i","coord","addClass","startFallAnimations","cluesLength","cluePair","html","startDroppingAt","start","column","oldY","animate","top","duration","easing","on","_","bind","down","move","up","unsetupEvents","document","off","_pickCellFromEvent","event","closest","target","isTouch","button","preventDefault","isDown","currentCell","trace","is","traceLength","cellBeforeLast","pop","some","v","previousCell","pX","pY","Math","abs","debugEvents","onlyCheckFirst","wordHash","CryptoJS","SHA1","toUpperCase","hash","clueNumber","tryWord","ready","App","className","onClick","src","alt","autoPlay","loop","controls","type","href","viewBox","xmlns","transform","d","stroke","strokeWidth","strokeLinecap","fillRule","clipRule","mask","cx","cy","r","clipPath","x1","y1","x2","y2","gradientUnits","offset","stopColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8900e733.chunk.js","sourcesContent":["import $ from \"jquery\";\nimport _ from 'underscore';\nimport CryptoJS from 'crypto-js/crypto-js';\nimport SHA1 from 'crypto-js/sha1';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"horizontal-parent\">\n  \n  <div className=\"horizontal-child\">\n  <div className=\"slide star-wars\">\n    <div className=\"wrapper\">\n      <div className=\"scroll-text\">\n        <h1>C Новым годом!</h1>\n        <h2>Мой самый любимый во всей вселенной муж!</h2>\n        <p>Пусть Новый Год тебя балует интересными людьми, яркими впечатлениями, новыми вершинами.</p>\n        <p>Спасибо за все что ты для меня делаешь, за наших невероятных котят, за планы, которые мы строим вместе, за твой смешной нос и щекотные бока, за вдохновение становиться лучше, за твою доброту и шуточки.</p>\n        <p>Вместе мы все-все сможем!</p>\n        <p>Ты ЦИПКА. Люблю тебя больше чем космос!</p>\n      </div>\n\n    </div>\n    <div className='anim-stars'>\n      <div className=\"stars-01\"></div>\n      <div className=\"stars-02\"></div>\n      <div className=\"stars-03\"></div>\n      <div className=\"stars-04\"></div>\n    </div>\n  </div>\n    \n    <div className=\"slide\">\n    \n      <div className=\"game-area\">\n        <div className=\"game-grid\">\n        </div>\n        <div className=\"clue-area\">\n          <div>\n          <h3>Найди</h3>\n          <button className=\"game-btn\" onClick={gameButton}>\n            <img src=\"new.svg\" alt=\"icon\"/>\n          </button>\n          </div>\n          <ul className=\"clues\">\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <div className=\"slide\">\n      <video className=\"bg-video\" autoPlay loop>\n        <source src=\"TDMovieOut.0.mp4\"></source>\n      </video>\n      <video className=\"video\" controls=\"controls\">\n        <source src=\"zeal.mp4\" type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'/>\n        <a href=\"zeal.mp4\">Download</a>\n      </video>\n    </div>\n\n    <div className=\"slide with-tree\">\n    <svg className='tree' width=\"2507\" height=\"3513\" viewBox=\"0 0 2507 3513\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect x=\"1405.61\" y=\"1287.27\" width=\"86.1305\" height=\"86.1305\" transform=\"rotate(-98.9282 1405.61 1287.27)\" fill=\"#F3A6C0\"/>\n      <rect x=\"1328.15\" y=\"571.016\" width=\"66.7446\" height=\"66.7446\" transform=\"rotate(-98.9282 1328.15 571.016)\" fill=\"#F3A6C0\"/>\n      <path d=\"M761.817 318.685C717.593 269.924 711.42 206.706 715.987 179.302C719.531 158.04 741.784 150.196 761.817 167.961C786.859 190.168 792.056 242.614 825.13 272.854C858.203 303.094 852.534 242.614 844.501 211.903C836.469 181.193 793.475 23.3679 817.571 9.66964C854.931 -11.5693 875.16 40.6517 910.649 145.755C935.219 218.521 922.935 268.129 986.72 253.954C1013.65 247.97 967.821 184.027 992.862 167.961C1017.9 151.896 1076.02 195.366 1076.02 242.614C1076.02 289.862 1030.66 291.281 1013.65 318.685C1000.04 340.608 1046.41 392.076 1076.02 418.85L1004.2 454.759C985.931 421.685 953.929 359.507 922.935 339.474C884.191 314.432 817.098 379.635 761.817 318.685Z\" fill=\"url(#paint0_linear_109_326)\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1702.68 324.353C1746.91 275.592 1753.08 212.374 1748.51 184.97C1744.97 163.708 1722.72 155.864 1702.68 173.629C1677.64 195.836 1672.45 248.282 1639.37 278.522C1606.3 308.762 1611.97 248.282 1620 217.571C1628.03 186.861 1671.03 29.0359 1646.93 15.3376C1609.57 -5.90135 1589.34 46.3196 1553.85 151.423C1529.28 224.189 1541.57 273.797 1477.78 259.622C1450.85 253.638 1496.68 189.695 1471.64 173.629C1446.6 157.564 1388.48 201.033 1388.48 248.282C1388.48 295.53 1433.84 296.949 1450.85 324.353C1464.46 346.276 1418.09 397.744 1388.48 424.518L1460.3 460.427C1478.57 427.353 1510.57 365.175 1541.57 345.142C1580.31 320.1 1647.4 385.303 1702.68 324.353Z\" fill=\"url(#paint1_linear_109_326)\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1633.02 1377.07C1633.35 1376.1 1633.68 1375.2 1634.01 1374.38L1633.02 1377.07C1618.27 1421.38 1619.88 1621.82 1743.68 1720.96C1901.83 1847.6 2249.01 1993.01 2249.01 2157.21C2249.01 2321.42 2117.73 2309.9 2075.72 2394.73C2033.71 2479.56 2106.85 2518.16 2224.77 2631.03C2352.01 2752.82 2501.67 2893.39 2501.67 3080.62C2501.67 3267.84 2299.91 3351.46 2166.01 3401.14C2006.79 3460.22 1614.63 3515.66 1441.34 3470.22C1346.51 3445.35 1433.46 2913.79 1471.63 2656.48L1634.01 2193.57L1538.89 1631.89L1633.02 1377.07Z\" fill=\"url(#paint2_linear_109_326)\"/>\n      <path d=\"M1634.01 1374.38C1618.26 1412.55 1617.17 1619.65 1743.68 1720.96C1901.83 1847.6 2249.01 1993.01 2249.01 2157.21C2249.01 2321.42 2117.73 2309.9 2075.72 2394.73C2033.71 2479.56 2106.85 2518.16 2224.77 2631.03C2352.01 2752.82 2501.67 2893.39 2501.67 3080.62C2501.67 3267.84 2299.91 3351.46 2166.01 3401.14C2006.79 3460.22 1614.63 3515.66 1441.34 3470.22C1346.51 3445.35 1433.46 2913.79 1471.63 2656.48L1634.01 2193.57L1538.89 1631.89L1634.01 1374.38Z\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1386.82 836.945C1318.87 771.404 1241.4 574.587 1241.4 513.391C1241.4 513.391 1204.44 662.929 1204.44 684.256C1204.44 710.916 1464.37 1265.93 1406.81 1388.32C1349.25 1510.71 1188.68 1697.94 1204.44 1805.18C1220.19 1912.43 1185.05 2248.71 1105.07 2363.83C1025.09 2478.95 1039.63 2547.42 1009.33 2700.11C979.04 2852.8 665.18 3067.29 611.254 3189.68C557.328 3312.08 611.254 3418.57 837.86 3476.28C1032.96 3525.96 1534.05 3515.66 1759.45 3454.46C1984.84 3393.27 2070.43 3214.82 2007.87 3002.46C1918.8 2700.11 1646.75 2682.54 1597.67 2485.01C1548.59 2287.49 1808.52 2245.07 1808.52 2128.13C1808.52 1923.94 1638.87 1930 1597.67 1721.57C1570.75 1585.39 1660.08 1563.43 1740.66 1496.17C1803.68 1443.58 1836.4 1350.75 1803.68 1245.33C1762.09 1111.33 1506.78 952.673 1386.82 836.945Z\" fill=\"url(#paint3_linear_109_326)\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1234.12 1113.85C1191.71 906.625 1185.65 675.775 1242 528.539C1262 573.982 1265.63 733.336 1293.5 804.833C1339.89 923.819 1409.83 962.28 1529.81 1124.15C1632.21 1262.29 1663.71 1335.61 1619.48 1421.04C1583.22 1491.08 1330.46 1619.17 1283.81 1665.22C1237.16 1711.27 1217.16 1759.74 1242 1833.06C1266.85 1906.37 1372.27 1969.39 1427.41 2022.71C1482.55 2076.03 1488.61 2154.79 1468.61 2217.2C1442.4 2299 1315.32 2342.02 1230.49 2395.34C1162.63 2437.99 1144.45 2512.28 1140.21 2543.18C1087.5 2817.66 1581.08 3078.76 1216.03 3394.59C1065.76 3524.6 737.291 3513.49 522.895 3476.33C308.498 3439.17 145.87 3354.5 59.8782 3214.53C-36.4474 3057.73 9.37069 2901.26 95.6262 2814.63C234.378 2675.27 314.965 2735.25 430.689 2579.53C507.092 2476.73 447.657 2252.95 462.199 2141.46C481.72 1991.8 873.61 1669.46 917.235 1614.93C960.86 1560.4 1198.98 1567.67 1242 1499.2C1285.02 1430.73 1262.35 1251.75 1234.12 1113.85Z\" fill=\"url(#paint4_linear_109_326)\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1245.39 537.85L1243.21 521.266C1181.21 690.516 970.315 1249.44 928.145 1355.6C875.433 1488.29 814.232 1596.75 717.892 1689.45C621.553 1782.16 409.485 1928.79 343.441 2048.15C277.398 2167.52 373.125 2344.44 552.475 2344.44C761.535 2344.44 928.145 2263.25 928.145 2069.36C928.145 1965.84 814.688 1783.37 897.85 1689.45C994.962 1579.79 1101.43 1602.76 1186.86 1569.49C1291.08 1528.89 1343.79 1451.33 1343.79 1355.6C1343.79 1287.53 1283.71 829.775 1245.39 537.85Z\" fill=\"url(#paint5_linear_109_326)\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M986.911 962.975C1084.17 870.912 1203.83 686.681 1239.58 517.027C1255.33 640.027 1192.32 967.216 1185.65 1143.54C1178.08 1343.93 1167.47 1410.24 1085.68 1477.39C963.89 1577.36 848.767 1583.42 758.487 1530.71C692.28 1492.05 630.642 1396.2 661.542 1290.16C691.907 1185.97 862.094 1081.13 986.911 962.975Z\" fill=\"url(#paint6_linear_109_326)\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M48.998 3025.5C65.998 2906.5 148.198 2811.5 226.998 2779.5C330.498 2737.47 434.798 2675.16 467.498 2628.5C508.498 2570 515.498 2476 516.998 2432.5C518.198 2397.7 517.498 2361.33 516.998 2354\" stroke=\"#1B1B19\" strokeWidth=\"10\" strokeLinecap=\"round\"/>\n      <path d=\"M929.497 1916C912.998 1874.5 897.699 1794.5 902.499 1758.5C910.565 1698 967.498 1665.5 1005 1652C1045.71 1637.34 1134.5 1614.4 1182 1601.5C1268.5 1578 1326 1518 1342.5 1491.5C1355.7 1470.3 1381 1390.5 1372 1307\" stroke=\"#1B1B19\" strokeWidth=\"10\" strokeLinecap=\"round\"/>\n      <path d=\"M2081 3389C2187.5 3361 2326.21 3300.54 2382 3240.5C2447.5 3170 2474.5 3107.5 2454 3009.5C2433.5 2911.5 2370.06 2823.79 2330 2778.5C2295.5 2739.5 2219.5 2670.5 2187.5 2636.5C2161.9 2609.3 2111.33 2567 2101.5 2557\" stroke=\"#1B1B19\" strokeWidth=\"10\" strokeLinecap=\"round\"/>\n      <path d=\"M1573 1021.5C1614.16 1056.83 1686.5 1124 1718.5 1158.5C1748.06 1190.38 1795.33 1257.5 1790.5 1320C1785.66 1382.5 1773 1413.5 1754 1438.5C1726.6 1474.55 1689.5 1493.5 1652 1526.5C1622 1552.9 1581.5 1585 1573 1635.5\" stroke=\"#1B1B19\" strokeWidth=\"10\" strokeLinecap=\"round\"/>\n      <path d=\"M1242.08 359.362C1479.58 359.362 1672.11 569.133 1672.11 569.133C1672.11 569.133 1442.87 569.133 1205.37 569.133C967.874 569.133 812.053 569.133 812.053 569.133C812.053 569.133 1004.58 359.362 1242.08 359.362Z\" fill=\"#912CFF\"/>\n      <path d=\"M1242.08 778.904C1479.58 778.904 1672.11 569.133 1672.11 569.133C1672.11 569.133 1442.87 569.133 1205.37 569.133C967.874 569.133 812.053 569.133 812.053 569.133C812.053 569.133 1004.58 778.904 1242.08 778.904Z\" fill=\"#B4F3D5\"/>\n      <path d=\"M1090 566.511C1090 606.151 1105.75 644.167 1133.78 672.196C1161.81 700.226 1199.82 715.973 1239.46 715.973C1279.1 715.973 1317.12 700.226 1345.15 672.196C1373.18 644.167 1388.92 606.151 1388.92 566.511L1239.46 566.511L1090 566.511Z\" fill=\"#912CFF\"/>\n      <path d=\"M1090 569.134C1090 532.229 1105.75 494.393 1133.78 468.296C1161.81 442.2 1199.82 427.539 1239.46 427.539C1279.1 427.539 1317.12 442.2 1345.15 468.296C1373.18 494.393 1388.92 532.229 1388.92 569.134H1239.46H1090Z\" fill=\"#B4F3D5\"/>\n      <path d=\"M1092 570.595C1092 533.689 1107.74 495.854 1135.77 469.757C1163.8 443.661 1201.82 429 1241.46 429C1281.1 429 1319.12 443.661 1347.15 469.757C1375.18 495.854 1390.92 533.689 1390.92 570.595\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1390.92 569.998C1390.92 606.904 1375.17 644.74 1347.15 670.836C1319.12 696.933 1281.1 711.594 1241.46 711.594C1201.82 711.594 1163.8 696.933 1135.77 670.836C1107.74 644.74 1092 606.904 1092 569.998\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1182.36 516.102C1182.36 506.875 1184.71 500.048 1189.4 495.622C1194.15 491.142 1200.36 488.902 1208.04 488.902C1214.6 488.902 1219.86 490.555 1223.8 493.862C1227.75 497.168 1229.72 501.835 1229.72 507.862C1229.72 510.475 1229.32 512.902 1228.52 515.142C1227.78 517.328 1226.76 519.275 1225.48 520.982C1224.2 522.635 1222.5 524.182 1220.36 525.622C1218.23 527.008 1216.02 528.208 1213.72 529.222C1211.48 530.182 1208.74 531.115 1205.48 532.022C1202.28 532.928 1199.19 533.702 1196.2 534.342C1193.27 534.982 1189.83 535.648 1185.88 536.342V538.982L1192.52 537.142H1229.72V546.102H1183.16V528.102C1184.28 527.942 1185.22 527.808 1185.96 527.702C1186.71 527.595 1188.07 527.355 1190.04 526.982C1192.02 526.608 1193.72 526.262 1195.16 525.942C1196.6 525.568 1198.42 525.062 1200.6 524.422C1202.79 523.728 1204.66 523.035 1206.2 522.342C1207.8 521.595 1209.48 520.715 1211.24 519.702C1213 518.635 1214.44 517.515 1215.56 516.342C1216.68 515.168 1217.59 513.835 1218.28 512.342C1219.03 510.795 1219.4 509.168 1219.4 507.462C1219.4 504.528 1218.47 502.208 1216.6 500.502C1214.79 498.742 1211.99 497.862 1208.2 497.862C1203.08 497.862 1199.22 499.302 1196.6 502.182C1193.99 505.062 1192.68 509.702 1192.68 516.102H1182.36ZM1243.98 496.902C1248.57 491.568 1254.91 488.902 1263.02 488.902C1271.13 488.902 1277.45 491.568 1281.98 496.902C1286.57 502.235 1288.86 509.222 1288.86 517.862C1288.86 526.555 1286.57 533.568 1281.98 538.902C1277.45 544.235 1271.13 546.902 1263.02 546.902C1254.91 546.902 1248.57 544.235 1243.98 538.902C1239.39 533.568 1237.1 526.555 1237.1 517.862C1237.1 509.168 1239.39 502.182 1243.98 496.902ZM1263.02 497.862C1258.01 497.862 1254.14 499.648 1251.42 503.222C1248.7 506.742 1247.34 511.622 1247.34 517.862C1247.34 521.755 1247.85 525.062 1248.86 527.782L1272.54 500.982C1269.98 498.902 1266.81 497.862 1263.02 497.862ZM1263.02 537.942C1268.03 537.942 1271.87 536.182 1274.54 532.662C1277.26 529.088 1278.62 524.155 1278.62 517.862C1278.62 514.075 1278.14 510.795 1277.18 508.022L1253.42 534.742C1255.98 536.875 1259.18 537.942 1263.02 537.942Z\" fill=\"#852CFF\"/>\n      <path d=\"M929.412 508.598C925.465 508.598 922.372 509.931 920.132 512.598C917.892 515.211 916.772 519.211 916.772 524.598V540.598H906.452V500.438H916.772V506.118L914.932 512.278H917.572C918.425 508.491 920.132 505.451 922.692 503.158C925.305 500.811 928.692 499.638 932.852 499.638C937.812 499.638 941.679 501.211 944.452 504.358C947.279 507.451 948.692 511.931 948.692 517.798V540.598H938.452V519.318C938.452 515.478 937.732 512.731 936.292 511.078C934.905 509.424 932.612 508.598 929.412 508.598ZM955.127 520.038C955.127 513.744 957.02 508.784 960.807 505.158C964.593 501.478 969.527 499.638 975.607 499.638C981.687 499.638 986.567 501.398 990.247 504.918C993.98 508.438 995.847 513.211 995.847 519.238V522.598H964.887C964.993 525.744 966.007 528.278 967.927 530.198C969.9 532.064 972.86 532.998 976.807 532.998C982.513 532.998 985.9 530.838 986.967 526.518H997.287C996.593 530.198 994.513 533.611 991.047 536.758C987.58 539.851 982.833 541.398 976.807 541.398C969.713 541.398 964.327 539.371 960.647 535.318C956.967 531.264 955.127 526.171 955.127 520.038ZM964.887 516.358H986.087C986.087 513.958 985.207 511.984 983.447 510.438C981.74 508.891 979.127 508.118 975.607 508.118C972.087 508.118 969.42 508.918 967.607 510.518C965.793 512.064 964.887 514.011 964.887 516.358ZM999.798 500.438H1009.64L1016.6 537.958H1019.32L1024.36 500.438H1045.8L1050.92 537.958H1053.56L1060.6 500.438H1070.36L1062.92 540.598H1041.56L1036.44 503.158H1033.8L1028.68 540.598H1007.24L999.798 500.438Z\" fill=\"#B4F3D5\"/>\n      <path d=\"M1437.71 595.145H1449.23L1431.23 633.705V645.625C1431.23 649.731 1429.12 651.705 1424.91 651.545L1406.91 650.905V641.945L1420.99 642.425V633.705L1402.91 595.145H1414.43L1424.75 620.905V625.945H1427.47V620.905L1437.71 595.145ZM1450.23 614.745C1450.23 608.451 1452.13 603.491 1455.91 599.865C1459.7 596.185 1464.63 594.345 1470.71 594.345C1476.79 594.345 1481.67 596.105 1485.35 599.625C1489.09 603.145 1490.95 607.918 1490.95 613.945V617.305H1459.99C1460.1 620.451 1461.11 622.985 1463.03 624.905C1465.01 626.771 1467.97 627.705 1471.91 627.705C1477.62 627.705 1481.01 625.545 1482.07 621.225H1492.39C1491.7 624.905 1489.62 628.318 1486.15 631.465C1482.69 634.558 1477.94 636.105 1471.91 636.105C1464.82 636.105 1459.43 634.078 1455.75 630.025C1452.07 625.971 1450.23 620.878 1450.23 614.745ZM1459.99 611.065H1481.19C1481.19 608.665 1480.31 606.691 1478.55 605.145C1476.85 603.598 1474.23 602.825 1470.71 602.825C1467.19 602.825 1464.53 603.625 1462.71 605.225C1460.9 606.771 1459.99 608.718 1459.99 611.065ZM1497.93 624.265C1497.93 620.798 1499.08 618.051 1501.37 616.025C1503.72 613.998 1507.56 612.665 1512.89 612.025L1526.81 610.345C1526.65 605.331 1523.56 602.825 1517.53 602.825C1514.7 602.825 1512.44 603.465 1510.73 604.745C1509.08 605.971 1508.25 607.838 1508.25 610.345H1498.49C1498.49 605.598 1500.25 601.758 1503.77 598.825C1507.29 595.838 1511.88 594.345 1517.53 594.345C1523.34 594.345 1528.06 595.945 1531.69 599.145C1535.32 602.291 1537.13 606.825 1537.13 612.745V626.345H1542.97V635.305H1534.81C1533.05 635.305 1531.69 634.825 1530.73 633.865C1529.82 632.905 1529.37 631.571 1529.37 629.865V628.505L1530.97 623.945H1528.25C1526.33 632.051 1520.94 636.105 1512.09 636.105C1509.21 636.105 1506.76 635.705 1504.73 634.905C1502.76 634.105 1501.32 633.038 1500.41 631.705C1499.5 630.371 1498.86 629.118 1498.49 627.945C1498.12 626.718 1497.93 625.491 1497.93 624.265ZM1508.25 622.505C1508.25 624.051 1508.76 625.225 1509.77 626.025C1510.84 626.771 1512.22 627.145 1513.93 627.145C1517.82 627.145 1520.94 626.185 1523.29 624.265C1525.64 622.291 1526.81 619.731 1526.81 616.585L1514.73 618.105C1512.44 618.371 1510.78 618.825 1509.77 619.465C1508.76 620.051 1508.25 621.065 1508.25 622.505ZM1548.71 635.305V600.665C1548.71 598.638 1549.24 597.091 1550.31 596.025C1551.43 594.958 1553 594.451 1555.03 594.505L1579.75 595.145V604.105L1559.03 603.545V635.305H1548.71Z\" fill=\"#852CFF\"/>\n      <path d=\"M1180.16 625.125C1180.16 615.898 1182.51 609.072 1187.2 604.645C1191.95 600.165 1198.16 597.925 1205.84 597.925C1212.4 597.925 1217.65 599.578 1221.6 602.885C1225.55 606.192 1227.52 610.858 1227.52 616.885C1227.52 619.498 1227.12 621.925 1226.32 624.165C1225.57 626.352 1224.56 628.298 1223.28 630.005C1222 631.658 1220.29 633.205 1218.16 634.645C1216.03 636.032 1213.81 637.232 1211.52 638.245C1209.28 639.205 1206.53 640.138 1203.28 641.045C1200.08 641.952 1196.99 642.725 1194 643.365C1191.07 644.005 1187.63 644.672 1183.68 645.365V648.005L1190.32 646.165H1227.52V655.125H1180.96V637.125C1182.08 636.965 1183.01 636.832 1183.76 636.725C1184.51 636.618 1185.87 636.378 1187.84 636.005C1189.81 635.632 1191.52 635.285 1192.96 634.965C1194.4 634.592 1196.21 634.085 1198.4 633.445C1200.59 632.752 1202.45 632.058 1204 631.365C1205.6 630.618 1207.28 629.738 1209.04 628.725C1210.8 627.658 1212.24 626.538 1213.36 625.365C1214.48 624.192 1215.39 622.858 1216.08 621.365C1216.83 619.818 1217.2 618.192 1217.2 616.485C1217.2 613.552 1216.27 611.232 1214.4 609.525C1212.59 607.765 1209.79 606.885 1206 606.885C1200.88 606.885 1197.01 608.325 1194.4 611.205C1191.79 614.085 1190.48 618.725 1190.48 625.125H1180.16ZM1234.81 625.125C1234.81 615.898 1237.16 609.072 1241.85 604.645C1246.6 600.165 1252.81 597.925 1260.49 597.925C1267.05 597.925 1272.3 599.578 1276.25 602.885C1280.2 606.192 1282.17 610.858 1282.17 616.885C1282.17 619.498 1281.77 621.925 1280.97 624.165C1280.22 626.352 1279.21 628.298 1277.93 630.005C1276.65 631.658 1274.94 633.205 1272.81 634.645C1270.68 636.032 1268.46 637.232 1266.17 638.245C1263.93 639.205 1261.18 640.138 1257.93 641.045C1254.73 641.952 1251.64 642.725 1248.65 643.365C1245.72 644.005 1242.28 644.672 1238.33 645.365V648.005L1244.97 646.165H1282.17V655.125H1235.61V637.125C1236.73 636.965 1237.66 636.832 1238.41 636.725C1239.16 636.618 1240.52 636.378 1242.49 636.005C1244.46 635.632 1246.17 635.285 1247.61 634.965C1249.05 634.592 1250.86 634.085 1253.05 633.445C1255.24 632.752 1257.1 632.058 1258.65 631.365C1260.25 630.618 1261.93 629.738 1263.69 628.725C1265.45 627.658 1266.89 626.538 1268.01 625.365C1269.13 624.192 1270.04 622.858 1270.73 621.365C1271.48 619.818 1271.85 618.192 1271.85 616.485C1271.85 613.552 1270.92 611.232 1269.05 609.525C1267.24 607.765 1264.44 606.885 1260.65 606.885C1255.53 606.885 1251.66 608.325 1249.05 611.205C1246.44 614.085 1245.13 618.725 1245.13 625.125H1234.81Z\" fill=\"#B4F3D5\"/>\n      <mask id=\"path-25-inside-1_109_326\" fill=\"white\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1672.11 569.13C1672.11 569.13 1479.58 359.359 1242.08 359.359C1004.58 359.359 812.053 569.13 812.053 569.13C812.053 569.13 1004.58 778.901 1242.08 778.901C1479.58 778.901 1672.11 569.13 1672.11 569.13Z\"/>\n      </mask>\n      <path d=\"M1672.11 569.13L1679.48 575.892L1685.69 569.13L1679.48 562.369L1672.11 569.13ZM812.053 569.13L804.685 562.369L798.479 569.13L804.685 575.892L812.053 569.13ZM1242.08 369.359C1357.99 369.359 1463.52 420.613 1540.57 472.538C1579.01 498.439 1610.12 524.349 1631.61 543.773C1642.36 553.48 1650.68 561.556 1656.3 567.183C1659.11 569.997 1661.24 572.197 1662.66 573.683C1663.37 574.426 1663.91 574.99 1664.25 575.362C1664.43 575.549 1664.56 575.687 1664.64 575.776C1664.68 575.82 1664.71 575.852 1664.73 575.872C1664.74 575.882 1664.74 575.888 1664.75 575.892C1664.75 575.893 1664.75 575.893 1664.75 575.894C1664.75 575.894 1664.75 575.892 1672.11 569.13C1679.48 562.369 1679.48 562.366 1679.47 562.362C1679.47 562.359 1679.47 562.355 1679.46 562.35C1679.46 562.341 1679.44 562.328 1679.43 562.313C1679.4 562.281 1679.36 562.237 1679.31 562.181C1679.2 562.068 1679.05 561.905 1678.85 561.695C1678.46 561.273 1677.88 560.66 1677.12 559.866C1675.61 558.279 1673.37 555.973 1670.45 553.05C1664.62 547.206 1656.04 538.893 1645.02 528.935C1623 509.026 1591.13 482.494 1551.75 455.952C1473.16 402.991 1363.67 349.359 1242.08 349.359V369.359ZM812.053 569.13C819.42 575.892 819.419 575.894 819.418 575.894C819.419 575.893 819.419 575.893 819.421 575.892C819.424 575.888 819.43 575.882 819.439 575.872C819.457 575.852 819.486 575.82 819.528 575.776C819.61 575.687 819.739 575.549 819.913 575.362C820.261 574.99 820.793 574.426 821.503 573.683C822.923 572.197 825.055 569.997 827.865 567.183C833.485 561.556 841.81 553.48 852.552 543.773C874.044 524.349 905.159 498.439 943.594 472.538C1020.64 420.613 1126.17 369.359 1242.08 369.359V349.359C1120.49 349.359 1011.01 402.991 932.417 455.952C893.032 482.494 861.171 509.026 839.142 528.935C828.122 538.893 819.55 547.206 813.714 553.05C810.795 555.973 808.56 558.279 807.043 559.866C806.285 560.66 805.706 561.273 805.312 561.695C805.115 561.905 804.963 562.068 804.859 562.181C804.806 562.237 804.766 562.281 804.737 562.313C804.722 562.328 804.711 562.341 804.702 562.35C804.698 562.355 804.694 562.359 804.692 562.362C804.688 562.366 804.685 562.369 812.053 569.13ZM812.053 569.13C804.685 575.892 804.688 575.895 804.692 575.899C804.694 575.901 804.698 575.906 804.702 575.911C804.711 575.92 804.722 575.933 804.737 575.948C804.766 575.98 804.806 576.024 804.859 576.08C804.963 576.193 805.115 576.355 805.312 576.566C805.706 576.987 806.285 577.601 807.043 578.395C808.56 579.982 810.795 582.288 813.714 585.21C819.55 591.055 828.122 599.368 839.142 609.326C861.171 629.235 893.032 655.767 932.417 682.309C1011.01 735.27 1120.49 788.901 1242.08 788.901V768.901C1126.17 768.901 1020.64 717.647 943.594 665.723C905.159 639.822 874.044 613.912 852.552 594.488C841.81 584.781 833.485 576.705 827.865 571.078C825.055 568.264 822.923 566.063 821.503 564.578C820.793 563.835 820.261 563.271 819.913 562.898C819.739 562.712 819.61 562.574 819.528 562.485C819.486 562.44 819.457 562.408 819.439 562.389C819.43 562.379 819.424 562.373 819.421 562.369C819.419 562.368 819.419 562.367 819.418 562.367C819.419 562.367 819.42 562.369 812.053 569.13ZM1242.08 788.901C1363.67 788.901 1473.16 735.27 1551.75 682.309C1591.13 655.767 1623 629.235 1645.02 609.326C1656.04 599.368 1664.62 591.055 1670.45 585.21C1673.37 582.288 1675.61 579.982 1677.12 578.395C1677.88 577.601 1678.46 576.987 1678.85 576.566C1679.05 576.355 1679.2 576.193 1679.31 576.08C1679.36 576.024 1679.4 575.98 1679.43 575.948C1679.44 575.933 1679.46 575.92 1679.46 575.911C1679.47 575.906 1679.47 575.901 1679.47 575.899C1679.48 575.895 1679.48 575.892 1672.11 569.13C1664.75 562.369 1664.75 562.367 1664.75 562.367C1664.75 562.367 1664.75 562.368 1664.75 562.369C1664.74 562.373 1664.74 562.379 1664.73 562.389C1664.71 562.408 1664.68 562.44 1664.64 562.485C1664.56 562.574 1664.43 562.712 1664.25 562.898C1663.91 563.271 1663.37 563.835 1662.66 564.578C1661.24 566.063 1659.11 568.264 1656.3 571.078C1650.68 576.705 1642.36 584.781 1631.61 594.488C1610.12 613.912 1579.01 639.822 1540.57 665.723C1463.52 717.647 1357.99 768.901 1242.08 768.901V788.901Z\" fill=\"#1B1B19\" mask=\"url(#path-25-inside-1_109_326)\"/>\n      <path d=\"M411.066 3038.41L391.662 3128.4L509.67 3074.88L610.65 3151L588.078 3038.41L694.998 2953.97H537.786L509.67 2839L447.894 2971.02H298.998L411.066 3038.41Z\" fill=\"#FCE76B\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1864.15 2297.37C1833.7 2354.22 1788.74 2473.06 1783 2480L1885.67 2373.21L1920.02 2410.95L1994 2157L1901.14 2334.35L1864.15 2297.37Z\" fill=\"white\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M2188.68 3062.64C2187.6 3110.89 2197.81 3205.43 2196.33 3212.01L2228.71 3105.98L2264.41 3119.54L2227.83 2925L2225.88 3074.8L2188.68 3062.64Z\" fill=\"white\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M371.905 2149.7C371.526 2149.15 371.188 2148.65 370.891 2148.2C371.188 2147.73 371.528 2147.2 371.911 2146.61C373.671 2143.92 376.345 2140.03 379.954 2135.35C387.177 2125.98 398.122 2113.47 412.966 2100.96C442.629 2075.96 487.789 2051 550.048 2051C612.32 2051 658.476 2075.97 689.14 2101.01C704.479 2113.54 715.916 2126.06 723.505 2135.44C727.298 2140.13 730.124 2144.02 731.991 2146.72C732.365 2147.26 732.7 2147.76 732.997 2148.2C732.701 2148.62 732.369 2149.08 732 2149.59C730.096 2152.21 727.217 2155.98 723.366 2160.51C715.66 2169.59 704.081 2181.72 688.644 2193.86C657.78 2218.11 611.599 2242.3 550.048 2242.3C488.509 2242.3 443.324 2218.12 413.462 2193.91C398.52 2181.79 387.434 2169.67 380.095 2160.6C376.427 2156.07 373.702 2152.31 371.905 2149.7Z\" fill=\"#F9E1F6\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <circle cx=\"551.782\" cy=\"2146.54\" r=\"71.073\" fill=\"#1B1B19\"/>\n      <path d=\"M1426.71 3279.39C1425.98 3278.33 1425.37 3277.42 1424.88 3276.67C1425.36 3275.88 1425.97 3274.92 1426.7 3273.81C1428.98 3270.31 1432.45 3265.27 1437.12 3259.21C1446.48 3247.08 1460.64 3230.89 1479.86 3214.69C1518.26 3182.33 1576.75 3150 1657.36 3150C1737.98 3150 1797.75 3182.34 1837.43 3214.74C1857.28 3230.95 1872.08 3247.16 1881.9 3259.3C1886.81 3265.37 1890.48 3270.41 1892.9 3273.92C1893.63 3274.98 1894.25 3275.9 1894.76 3276.66C1894.25 3277.4 1893.62 3278.27 1892.89 3279.28C1890.42 3282.68 1886.69 3287.56 1881.7 3293.43C1871.73 3305.19 1856.75 3320.89 1836.77 3336.58C1796.83 3367.97 1737.04 3399.29 1657.36 3399.29C1577.68 3399.29 1519.17 3367.98 1480.52 3336.63C1461.18 3320.95 1446.83 3305.27 1437.32 3293.52C1432.57 3287.66 1429.04 3282.78 1426.71 3279.39Z\" fill=\"#F9E1F6\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <circle cx=\"1659.59\" cy=\"3274.51\" r=\"91.5479\" fill=\"#1B1B19\"/>\n      <path d=\"M1427.07 3273.25C1429.35 3269.78 1432.69 3264.95 1437.12 3259.21C1446.48 3247.08 1460.64 3230.89 1479.86 3214.69C1518.26 3182.33 1576.75 3150 1657.36 3150C1737.98 3150 1797.75 3182.34 1837.43 3214.74C1857.28 3230.95 1872.08 3247.16 1881.9 3259.3C1886.5 3264.98 1890 3269.75 1892.41 3273.22C1890.31 3273.59 1887.75 3274.02 1884.73 3274.51C1874.66 3276.11 1859.53 3278.27 1839.33 3280.42C1798.93 3284.73 1738.26 3289.04 1657.36 3289.04C1576.45 3289.04 1517.05 3284.73 1477.91 3280.42C1458.35 3278.27 1443.85 3276.12 1434.26 3274.51C1431.44 3274.04 1429.04 3273.61 1427.07 3273.25Z\" fill=\"#F1A1F7\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1374.37 1820.17L1360.45 1884.78L1445.09 1846.35L1517.51 1901L1501.32 1820.17L1578 1759.54H1465.25L1445.09 1677L1400.78 1771.78H1294L1374.37 1820.17Z\" fill=\"#852CFF\" stroke=\"black\" strokeWidth=\"10\"/>\n      <g clipPath=\"url(#clip0_109_326)\" className=\"star\">\n      <path d=\"M972.665 1347.64L968.111 1336.72L859.193 1381.87L904.125 1273.29L893.199 1268.79L848.065 1377.78L803.133 1269.2L792.223 1273.76L837.357 1382.71L728.812 1337.76L724.305 1348.69L831.793 1393.2L725.672 1437.15L730.18 1448.08L837.357 1403.67L792.798 1511.34L803.708 1515.86L848.065 1408.64L892.624 1516.28L903.55 1511.76L859.193 1404.55L966.79 1449.12L971.313 1438.21L862.659 1393.2L972.665 1347.64Z\" fill=\"#852CFF\"/>\n      <path d=\"M856.257 1393.2L944.752 1481.72L936.406 1490.07L847.911 1401.55L760.208 1489.3L751.862 1480.95L839.565 1393.2L750.805 1304.48L759.151 1296.09L847.911 1384.87L937.401 1295.29L945.794 1303.64L856.257 1393.2Z\" fill=\"#58C2C3\"/>\n      <path d=\"M980.654 1386.71V1398.52H854.049V1523.73H842.238V1398.52H718.213V1386.71H842.238V1261.21H854.049V1386.71H980.654Z\" fill=\"#FD8AC1\"/>\n      </g>\n      <g clipPath=\"url(#clip1_109_326)\">\n      <path d=\"M1326.85 2208.1L1330.39 2198.35L1233.2 2162.88L1326.68 2119.37L1322.29 2109.98L1228.43 2153.63L1263.83 2056.79L1254.08 2053.26L1218.58 2150.46L1175.11 2056.99L1165.71 2061.38L1208.76 2153.94L1114.09 2119.36L1110.51 2129.1L1206.15 2164.01L1113.44 2207.15L1117.81 2216.55L1210.11 2173.58L1175.03 2269.6L1184.77 2273.16L1219.73 2177.54L1262.82 2270.21L1272.22 2265.84L1228.71 2172.26L1326.85 2208.1Z\" fill=\"#852CFF\"/>\n      <path d=\"M1224.57 2168.46L1229.23 2278.2L1218.88 2278.64L1214.22 2168.9L1105.46 2173.56L1105.02 2163.21L1213.78 2158.56L1209.07 2048.53L1219.45 2048.06L1224.12 2158.12L1335.13 2153.34L1335.6 2163.72L1224.57 2168.46Z\" fill=\"#FCE76B\"/>\n      <path d=\"M1308.83 2238.1L1301.82 2245.73L1219.99 2170.59L1145.67 2251.52L1138.04 2244.5L1212.36 2163.58L1132.2 2089.97L1139.21 2082.33L1219.37 2155.94L1293.85 2074.84L1301.48 2081.85L1227 2162.95L1308.83 2238.1Z\" fill=\"#B4F3D5\"/>\n      </g>\n      <circle cx=\"1436\" cy=\"1201\" r=\"59\" fill=\"#852CFF\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1094.5 2549C1078.5 2695.5 1155.5 2805 1209.5 2902.5C1276.3 3023.11 1314.17 3148.25 1278 3234C1241.82 3319.75 1188.55 3372.39 1048 3414C909.498 3455 724.331 3443.17 677.498 3436\" stroke=\"#1B1B19\" strokeWidth=\"10\" strokeLinecap=\"round\"/>\n      <path d=\"M1198 804C1184.5 919.167 1165.7 1131.43 1159.5 1212C1154 1283.5 1154 1345 1098 1425C1063.02 1474.97 1002.16 1495.5 983.998 1503.5\" stroke=\"#1B1B19\" strokeWidth=\"10\" strokeLinecap=\"round\"/>\n      <path d=\"M1572.5 2475C1561.5 2435 1571.8 2370.9 1591 2340.5C1615 2302.5 1663.5 2262 1698 2233C1732.5 2204 1773.86 2180.5 1781 2136C1788.13 2091.5 1770.82 2031.88 1732.5 1978C1698 1929.5 1645.5 1878.33 1622 1849\" stroke=\"#1B1B19\" strokeWidth=\"10\" strokeLinecap=\"round\"/>\n      <path d=\"M421.498 2272C373.998 2225.5 349.998 2185.5 349.998 2126.5C349.998 2068.72 378.433 2035 416.498 1992C443.498 1961.5 579.165 1841.83 644.998 1782.5\" stroke=\"#1B1B19\" strokeWidth=\"10\" strokeLinecap=\"round\"/>\n      <path d=\"M1113.5 3069C1113.5 3139.65 1105.65 3147.5 1035 3147.5C1105.65 3147.5 1113.5 3155.35 1113.5 3226C1113.5 3155.35 1121.35 3147.5 1192 3147.5C1121.35 3147.5 1113.5 3139.65 1113.5 3069Z\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1010.5 1048C1010.5 1106.95 1003.95 1113.5 944.998 1113.5C1003.95 1113.5 1010.5 1120.05 1010.5 1179C1010.5 1120.05 1017.05 1113.5 1076 1113.5C1017.05 1113.5 1010.5 1106.95 1010.5 1048Z\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1911.5 1895C1911.5 1953.95 1904.95 1960.5 1846 1960.5C1904.95 1960.5 1911.5 1967.05 1911.5 2026C1911.5 1967.05 1918.05 1960.5 1977 1960.5C1918.05 1960.5 1911.5 1953.95 1911.5 1895Z\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <path d=\"M1278.5 2480C1278.5 2538.95 1271.95 2545.5 1213 2545.5C1271.95 2545.5 1278.5 2552.05 1278.5 2611C1278.5 2552.05 1285.05 2545.5 1344 2545.5C1285.05 2545.5 1278.5 2538.95 1278.5 2480Z\" stroke=\"#1B1B19\" strokeWidth=\"10\"/>\n      <defs>\n      <linearGradient id=\"paint0_linear_109_326\" x1=\"714.723\" y1=\"-153.282\" x2=\"895.176\" y2=\"401.897\" gradientUnits=\"userSpaceOnUse\">\n      <stop offset=\"0.665509\" stopColor=\"#FCE76B\"/>\n      <stop offset=\"1\" stopColor=\"#FC6D23\"/>\n      </linearGradient>\n      <linearGradient id=\"paint1_linear_109_326\" x1=\"1787.73\" y1=\"-141.944\" x2=\"1569.12\" y2=\"513.123\" gradientUnits=\"userSpaceOnUse\">\n      <stop offset=\"0.665509\" stopColor=\"#FCE76B\"/>\n      <stop offset=\"0.81615\" stopColor=\"#FC6D23\"/>\n      </linearGradient>\n      <linearGradient id=\"paint2_linear_109_326\" x1=\"1949.79\" y1=\"1653.49\" x2=\"2063.19\" y2=\"3716.35\" gradientUnits=\"userSpaceOnUse\">\n      <stop offset=\"0.16917\" stopColor=\"#852CFF\"/>\n      <stop offset=\"0.873568\" stopColor=\"#B4F3D5\"/>\n      </linearGradient>\n      <linearGradient id=\"paint3_linear_109_326\" x1=\"1309.85\" y1=\"513.391\" x2=\"1310.05\" y2=\"3858.57\" gradientUnits=\"userSpaceOnUse\">\n      <stop offset=\"0.665509\" stopColor=\"#FCE76B\"/>\n      <stop offset=\"1\" stopColor=\"#FC6D23\"/>\n      </linearGradient>\n      <linearGradient id=\"paint4_linear_109_326\" x1=\"569.67\" y1=\"4046.62\" x2=\"1188.62\" y2=\"1703.1\" gradientUnits=\"userSpaceOnUse\">\n      <stop stopColor=\"#852CFF\"/>\n      <stop offset=\"1\" stopColor=\"#FD8AC1\"/>\n      </linearGradient>\n      <linearGradient id=\"paint5_linear_109_326\" x1=\"832.843\" y1=\"1323.7\" x2=\"454.384\" y2=\"2693.43\" gradientUnits=\"userSpaceOnUse\">\n      <stop offset=\"0.243415\" stopColor=\"#B4F3D5\"/>\n      <stop offset=\"1\" stopColor=\"#852CFF\"/>\n      </linearGradient>\n      <linearGradient id=\"paint6_linear_109_326\" x1=\"948.129\" y1=\"1442.77\" x2=\"1242.01\" y2=\"784.597\" gradientUnits=\"userSpaceOnUse\">\n      <stop stopColor=\"#FCE76B\"/>\n      <stop offset=\"1\" stopColor=\"#883AFC\"/>\n      </linearGradient>\n      <clipPath id=\"clip0_109_326\">\n      <rect width=\"267\" height=\"267\" fill=\"white\" transform=\"translate(713.998 1257)\"/>\n      </clipPath>\n      <clipPath id=\"clip1_109_326\">\n      <rect width=\"234.289\" height=\"234.289\" fill=\"white\" transform=\"translate(1213.47 1996) rotate(42.5616)\"/>\n      </clipPath>\n      </defs>\n    </svg>\n      <hgroup className=\"slide-heading rainbow\">\n        <h1>\n        <div id=\"shadowBox\">\n            <h3 className=\"rainbow rainbow_text_animated\">Happy New Year</h3>\n        </div>\n        </h1>\n      </hgroup>\n    </div>\n  </div>\n\n</div>\n        <h1 className=\"marquee\">\n          <span>\n            <img src=\"pngwing.com.png\" alt=\"ship\"/>\n            Смешноносику необыкновенному!\n            <img src=\"pngwing.com.png\" alt=\"ship\"/>\n          </span>\n        </h1>\n\n    </div>\n\n  );\n}\n\nfunction tryWord(puzzle, word, onlyCheckFirst) {\n  if ( typeof word != 'string' ) {\n    return false;\n  }\n  var wordHash = ''+CryptoJS.SHA1(word.toUpperCase());\n  var length = onlyCheckFirst === true ? 1 : puzzle.clues.length;\n  for ( var clueI = 0; clueI < length; clueI++ ) {\n    var clue = puzzle.clues[clueI],\n        clueHash = clue.hash;\n    if ( clueHash === wordHash ) {\n      return {\n        clueNumber: clueI,\n        clue: clue\n      }\n    }\n  }\n  return false;\n};\n\nfunction Grid(puzzle) {\n  // Dom references.\n  this.$grid = $('.game-grid');\n  this.$clues = $('.clues');\n  this.$id = $('#puzzleId');\n  this.$author = $('#author');\n  // Constants.\n  this.gridPadding = 2;\n  this.cellMargin = 1;\n  // Gogogogo.\n  this.cleanUp();\n  this.setup(puzzle);\n}\n\n// Clean up stuff added in setup (done before to ensure clean slate).\nGrid.prototype.cleanUp = function() {\n  // Clear existing cells.\n  this.$grid.empty();\n  // Clear clues.\n  this.$clues.empty();\n  // Clear author name.\n  this.$author.text('');\n};\n\n// Construct grid whilst saving parts as members of Grid for convenient access.\nGrid.prototype.setup = function(puzzle) {\n  //$('.horizontal-child').css('overflow', 'hidden');\n  console.log('Starting puzzle #'+puzzle.id); // Just for making it a bit clearer in console when I hit go.\n  this.puzzle = puzzle;\n  // Start building array for tracking letters neatly (column-centric so easy to make letters fall).\n  this.columns = Array(puzzle.width);\n  // Select class for sizing cells, and offset for positioning cells.\n  var cellClasses = 'cell cell' + puzzle.width;\n  this.cellSize = ((100-(2*this.gridPadding)) / puzzle.width) - (2*this.cellMargin);\n  // Create cells.\n  var rows = puzzle.letters.split('/');\n  // Iterate rows.\n  for ( var iY = 0; iY < rows.length; iY++ ) {\n    var row = rows[iY],\n        cols = row.split(''),\n        y = this.puzzle.height-iY-1;\n    // Iterate columns.\n    for ( var x = 0; x < cols.length; x++ ) {\n      // Creating the cell.\n      var letter = cols[x],\n          cell = $('<div/>',{class:cellClasses}),\n          cellInner = $('<div/>',{class:'vam'});\n      cellInner.text(letter);\n      cellInner.appendTo(cell);\n      // Positioning it.\n      var xPos = this.gridPadding + (x * (this.cellSize+2*this.cellMargin)),\n          yPos = this.gridPadding + (y * (this.cellSize+2*this.cellMargin));\n      cell.css('left',''+xPos+'%');\n      cell.css('bottom',''+yPos+'%');\n      // Storing position data for trace tracking.\n      cell.data('x',x);\n      cell.data('y',y);\n      // Appending to grid.\n      cell.appendTo(this.$grid);\n      // And appending to columns for tracking/processing.\n      if ( this.columns[x] === undefined ) {\n        this.columns[x] = [];\n      }\n      this.columns[x].unshift({\n        letter: letter,\n        x: x, y: y,\n        $el: cell\n      });\n    }\n  }\n  // Insert clues.\n  this.clues = [];\n  for ( var clueI = 0; clueI < puzzle.clues.length; clueI++ ) {\n    var clue = puzzle.clues[clueI],\n        $clue = $('<li/>',{class:'clue'});\n    $clue.text(clue.clue);\n    this.clues.push({\n      clue: clue,\n      $el: $clue\n    });\n    $clue.appendTo(this.$clues);\n  }\n  // Insert puzzle ID and author name.\n  this.$id.text(puzzle.id);\n  this.$author.text(puzzle.author);\n};\n\n// Deletes a word (defined by specific letters) and invokes animation.\nGrid.prototype.deleteWord = function(word, coords, clue) {\n  // Reveal the answer in case of restart/rewind.\n  clue.revealedAnswer = word;\n  // Used to inform startFallAnimations about which need to fall.\n  var colsDroppingAt = Array(this.puzzle.width).fill(this.puzzle.height),\n  // Iterate letter coords...\n      coordsLength = coords.length;\n  for ( var i = 0; i < coordsLength; i++ ) {\n    var coord = coords[i],\n        x = coord.x, y = coord.y,\n        cell = this.columns[x][y];\n    // Update that this col needs to drop.\n    if ( y < colsDroppingAt[x] ) {\n      colsDroppingAt[x] = y;\n    }\n    // Kill the cell.\n    cell.$el.addClass('guess').removeClass('trace');\n    // this.columns[x][y].remove = true; // Mark for deletion (coords will be ruined by doing it now).\n  }\n  // Safely delete cell references.\n  // for ( var x = 0; x < this.columns.length; x++ ) {\n  //   var column = this.columns[x];\n  //   for ( var y = 0; y < column.length; ) {\n  //     var cell = column[y];\n  //     if ( cell.remove === true ) {\n  //       column.splice(y,1);\n  //     } else {\n  //       y++;\n  //     }\n  //   }\n  // }\n  // Calculate and trigger animations.\n  //console.log(colsDroppingAt);\n  this.startFallAnimations(colsDroppingAt);\n  // Mark the appropriate clue as done.\n  var cluesLength = this.clues.length;\n  for ( var i = 0; i < cluesLength; i++ ) {\n    var cluePair = this.clues[i];\n    var $clue = cluePair.$el;\n    if ( cluePair.clue === clue.clue ) {\n      $clue.addClass('clue-answered');\n      $clue.html($clue.text()+' <i>'+word+'</i>');\n      break;\n    }\n\n  }\n\n};\n\n// Iterates every cell looking for ones that can drop, setting up animations.\nGrid.prototype.startFallAnimations = function(startDroppingAt) {\n  // Iterate over this.columns.\n  for ( var x = 0; x < this.columns.length; x++ ) {\n    // Iterate up column, starting at element in startDroppingAt (can skip if -1).\n    var start = startDroppingAt[x];\n    if ( start < this.puzzle.height ) {\n      var column = this.columns[x];\n      for ( var y = start; y < column.length; y++ ) {\n        // If each item does not have y coord matching index in array:\n        var cell = column[y],\n            oldY = cell.y;\n        if ( oldY !== y ) {\n          // Trigger drop.\n          var yPos = this.gridPadding + ((this.puzzle.height-y-1) * (this.cellSize+2*this.cellMargin));\n          //cell.$el.css('top',''+yPos+'%');\n          // Animate the fall.\n          cell.$el.animate({top: yPos+'%'},{\n            duration: 200 * (oldY - y),\n            easing: 'linear'\n          });\n          // Update cell position.\n          cell.y = y;\n          cell.$el.data('y',y);\n        }\n      }\n    }\n  }\n};\n\n// SELECTION HANDLER CLASS\n// Handle click/touch drag selection on grid.\nfunction SelectionHandler(grid) {\n  this.grid = grid;\n  this.setupEvents();\n  this._debugEvents = false;\n}\n\n// Sets up events for mouse/touch down/up/move.\nSelectionHandler.prototype.setupEvents = function() {\n  // Disable touch shit.\n  //var preventDefault = function(e) { e.preventDefault(); }\n  //$('html','body').on('touchstart touchmove',preventDefault);\n  //$('body').parent().on('touchstart touchmove',preventDefault);\n  // Need to use document or body/etc because mouse event (like up) can be dropped when not inside grid.\n  $('html').on('mousedown',_.bind(this.down,this,false));\n  $('html').on('touchstart',_.bind(this.down,this,true));\n  $('html').on('mousemove',_.bind(this.move,this,false));\n  $('html').on('touchmove',_.bind(this.move,this,true));\n  $('html').on('mouseup',_.bind(this.up,this,false));\n  $('html').on('touchend',_.bind(this.up,this,true));\n};\n\n// Unsets the events setup by this class.\nSelectionHandler.prototype.unsetupEvents = function() {\n  $(document).off();\n};\n\n// Used by both down and move callbacks; returns the 'cell' object from target property of the event.\nSelectionHandler.prototype._pickCellFromEvent = function(event) {\n  var closest = $(event.target).closest('.cell',this.grid.$grid);\n  if ( closest.length === 0 ) {\n    return undefined;\n  }\n  return closest;\n};\n\n// Callback when mouse/touch down event is fired. Begins tracking movement over grid, beginning with selecting a letter.\nSelectionHandler.prototype.down = function(isTouch, event) {\n  // Give up if not left mouse button.\n  if ( event.button !== 0 ) {\n    return;\n  }\n  // Some useful debug info.\n  if ( this._debugEvents ) {\n    console.log((isTouch?'touch':'mouse')+' down:');\n    console.log(event);\n  }\n  // Stop handling events normally (particularly important for touch).\n  event.preventDefault();\n  // Register tracking started.\n  this.isDown = true;\n  // Attempt to pick a cell.\n  var cell = this._pickCellFromEvent(event);\n  if ( cell === undefined ) {\n    return;\n  }\n  // Apply :hover-like class to selected cell.\n  cell.addClass('trace');\n  // Tracking used to tell if selection has already happened for a cell; mainly used in move().\n  this.currentCell = cell;\n  // Start the trace.\n  this.trace = [cell];\n};\n\n// Callback when mouse/touch move event is fired. Tracks movement over grid and letter selection.\nSelectionHandler.prototype.move = function(isTouch, event) {\n  // Give up if handler has not already started tracking.\n  if ( !this.isDown ) {\n    return;\n  }\n  // Some useful debug info.\n  if ( this._debugEvents ) {\n    console.log((isTouch?'touch':'mouse')+' move:');\n    console.log(event);\n  }\n  // Stop handling events normally (particularly important for touch).\n  event.preventDefault();\n  // Hack to allow people to not click on a cell initially.\n  if ( this.trace === undefined ) {\n    this.trace = [];\n  }\n  // Attempt to pick a cell.\n  // Only activate adding to trace if not presently already inside a cell.\n  var cell = this._pickCellFromEvent(event);\n  // Give up if not there.\n  if ( cell === undefined ) {\n    this.currentCell = undefined;\n    return;\n  }\n  // Give up if haven't left current cell.\n  if ( cell.is(this.currentCell) ) {\n    return;\n  }\n  // Undo trace if reentering cell that was the last to be selected, removing it from list and removing hover class.\n  var traceLength = this.trace.length;\n  if ( traceLength > 1 ) { // Don't bother with check if it's first cell.\n    var cellBeforeLast = this.trace[traceLength-2];\n    if ( cell.is(cellBeforeLast) ) {\n      this.trace.pop().removeClass('trace');\n      return;\n    }\n  }\n  // Ensure cell has not already been selected (just ignore rather than destroying list).\n  var traceContainsCell = this.trace.some(function(v) { return v.is(cell); });\n  if ( traceContainsCell ) {\n    return;\n  }\n  // Tracking used to tell if selection has already happened for a cell.\n  this.currentCell = cell;\n  // Check cell is adjacent/diagonal to previous cell. This can go after this.currentCell assignment as it is only used to prevent excessive processing, and thus is especially useful when failing on a check this late.\n  if ( traceLength >= 1 ) { // Don't bother with check if it's first cell.\n    var previousCell = this.trace[traceLength-1],\n        pX = previousCell.data('x'), pY = previousCell.data('y'),\n        x = cell.data('x'), y = cell.data('y');\n    if ( !(Math.abs(pX-x) <= 1 && Math.abs(pY-y) <= 1) ) {\n      return;\n    }\n  }\n  // Apply :hover-like class to selected cell.\n  cell.addClass('trace');\n  this.trace.push(cell);\n};\n\n// Callback when mouse/touch up event is fired. Finishes tracking and tests word against the puzzle.\nSelectionHandler.prototype.up = function(isTouch, event) {\n  // Give up if not left mouse button.\n  if ( event.button !== 0 ) {\n    return;\n  }\n  // Some useful debug info.\n  if ( this.debugEvents ) {\n    console.log((isTouch?'touch':'mouse')+' up:');\n    console.log(event);\n  }\n  // Stop handling events normally (particularly important for touch).\n  event.preventDefault();\n  // Give up if nothing to process.\n  if ( this.trace === undefined ) {\n    this.isDown = false;\n    return;\n  }\n  // Reconstructing the trace.\n  //console.log(this.trace);\n  var word = '', coords = [], traceLength = this.trace.length;\n  for ( var i = 0; i < traceLength; i++ ) {\n    var cell = this.trace[i];\n    word += cell.text();\n    coords.push({ x: cell.data('x'), y: cell.data('y') });\n  }\n  //console.log(word); console.log(coords);\n  // If word check fails, remove .trace.\n  var clue = tryWord(this.grid.puzzle,word);\n  if ( !clue ) {\n    while ( this.trace.length > 0 ) {\n      this.trace.pop().removeClass('trace');\n    }\n  }\n  // Otherwise, fire grid method to remove the word.\n  else {\n    console.log('Word success!!',word);\n    this.grid.deleteWord(word,coords,clue);\n  }\n  // Register tracking ended.\n  this.isDown = false;\n  this.trace = undefined;\n  win();\n};\n\nfunction win() {\n  if ($('.game-grid').html() === '') {\n    console.log('win');\n  }\n}\n\n// Lazy pre-declare (not strictly needed).\nvar puzzles;\n\nfunction loadGame() {\n  var grid = new Grid(puzzles[0]);\n  var sh = new SelectionHandler(grid);\n}\n\n// ENTRY POINT.\n\n\n\n\n\n// Preset puzzles (to be removed).\n puzzles = [\n  {\n    id: 1, width: 10, height: 10,\n    letters: 'ПЦКСВОЮБОВ/ЦИАРАКЛАЬМ/АБЯКИХПКАШ/ЗПСВЗУЛОИН/АДЧЛЩЕЮТАТ/АНАВАНАЛАА/РОНМЫДРЕТС/ЛКАЕДВЕДЬУ/ЕИКЕНБРЩЯК/КНОТОКОМРИ',\n    clues: [\n      { clue: 'Трогает собак.', length: 4, hash: '1007b9a7a84810d3ec13a96d7d06e7853cd7267d' },\n      { clue: 'Черепаховый.', length: 6, hash: '46a91303eb40b21c39a17442a35b856da3d0efbe' },\n      { clue: 'Мажет всяким по стеклу.', length: 5, hash: 'dc480e6a2171572610da1f5a5c4b4900e22bdfa8' },\n      { clue: 'Буду тебя нЭжно.', length: 5, hash: '63164bda3297ab1130a7b7da060a7d5455d47a08' },\n      { clue: 'Животное символ города.', length: 7, hash: '8f1a033d543406880ccfeabb765a84247cc2ef37' },\n      { clue: 'Вкуснее когда холодная или в тесте.', length: 7, hash: '67817b32db1d67261ea9b2ed0c52a4044d73033a' },\n      { clue: 'Спорная колбаса.', length: 10, hash: 'b83ac2adcb3669d356451b5ce82141b6c3369a95' },\n      { clue: 'Автограф был на купюре. 4 буквы.', length: 4, hash: '06e6cb64b7394f17ebafc106ab2f45a12e110419' },\n      { clue: 'Ты у меня.', length: 6, hash: '76c5c66840530069f5208deb8e2ade2bde2834a3' },\n      { clue: 'Знаешь о них все. У тебя есть одна.', length: 6, hash: 'f116c6eff68186161a75885de0b50b1161829a00' },\n      { clue: 'Водяной удав. З', length: 9, hash: '10994060332e7d247344059d5ef219751e5c3045' },\n      { clue: 'Аббревиатура.', length: 4, hash: '2472cc9eb7888f377cd2c28b4022d174119ea8dc' },\n      { clue: 'Коронное блюдо.', length: 5, hash: '2c9fb6cb9f81be4f00ae64cb06fa17aaf5401f83' },\n      { clue: 'Даже самый большой самолет не вместит всю мою любовь!', length: 4, hash: '0ac5fdabbc4622d518196e66301587b334212e29' },\n      { clue: 'Раз в неделю. Кастрюлю.', length: 4, hash: '77b9491864694ac62b3b84b4ebe0353169850b32' },\n      { clue: 'Цвет для мышины.', length: 7, hash: '9f881d5d2a7f00a0f511450b7e76b21f2a467cb5' },\n      { clue: 'Хит.', length: 7, hash: 'c217c0ab0e5037bdb5ab5ba41d9d7a8262de0fcc' }\n    ]\n  }\n];\n\nfunction gameButton() {\n\n  console.log('1');\n\n  $('.clue').each(function () {\n    $(this).removeClass('clue-answered');\n  });\n\n  console.log('2');\n\n  $('.cell').each(function() {\n    $(this).removeClass( \"guess\" );\n  });\n\n  console.log('3');\n\n  $('i').each( function () {\n    $(this).remove();\n  });\n\n  console.log('4');\n\n  loadGame();\n};\n\n$(document).ready(function() {\n  loadGame();\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}